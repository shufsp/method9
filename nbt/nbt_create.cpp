#include <fmt/core.h>
#include <fstream>
#include <vector>
#include <filesystem>
#include <string>
#include "NBTWriter.h"
#include "nbt_create.h"
#include "nbt_adapt.h"

namespace fs = std::filesystem;

static const std::string PIRATES_ICON_BASE64 = "";


std::vector<server> txt_get_servers(const std::string_view path)
{
    std::ifstream txt_input{ path.data() };
    if (!txt_input.is_open())
        return {};

    std::vector<server> servers;
    std::string server_ip;
    int server_index = 0;
    while (std::getline(txt_input, server_ip))
        servers.push_back(server{ fmt::format("WHITELIST YOUR SERVER JOE #{}", ++server_index), PIRATES_ICON_BASE64, server_ip, 0, 0});
    txt_input.close();

    return servers;
}

void nbt_create_with(const std::string_view path, const std::vector<server>& servers)
{
     if (servers.empty())
         return;
     NBT::NBTWriter writer(path.data());
     adapt_nbt_to_version(v1_20, writer, servers);
     writer.close();
}

int main(int argc, char** argv)
{
    if (argc < 3)
    {
        fmt::print("Usage: nbt-creator <path to txt with list of ips> <output .dat path>\n");
        return -1;
    }


    const std::string_view txt_path = argv[1];
    if (txt_path.empty() || txt_path.length() > 256)
    {
        fmt::print("Invalid path or path is too long\n");
        return -2;
    }


    if (!fs::exists(txt_path))
    {
        fmt::print("File \"{}\" doesn't exist", txt_path);
        return -3;
    }

    const std::string_view output_dat_path = argv[2];
    if (output_dat_path.empty())
    {
        fmt::print("Invalid output path\n");
        return -4;
    }

    fmt::print("Creating server entries ...\n");
    const std::vector<server> servers = txt_get_servers(txt_path);
    
    fmt::print("Adding NBT data for server ips to .dat ...\n");
    nbt_create_with(output_dat_path, servers);
    fmt::print("Wrote {} servers to \"{}\"\n", servers.size(), output_dat_path);

    return 0;
}
